"use strict";(self.webpackChunkjellyfish_docs=self.webpackChunkjellyfish_docs||[]).push([[1770],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2358:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var n=r(7462),a=(r(7294),r(3905)),i=r(4996),o=r(941);const s={},l="Architecture",p={unversionedId:"getting_started/architecture",id:"version-0.2.0/getting_started/architecture",title:"Architecture",description:"Jellyfish ships with a couple of SDKs that make it easier to manage its state, as well as",source:"@site/versioned_docs/version-0.2.0/getting_started/architecture.md",sourceDirName:"getting_started",slug:"/getting_started/architecture",permalink:"/jellyfish-docs/getting_started/architecture",draft:!1,editUrl:"https://github.com/jellyfish-dev/jellyfish-docs/versioned_docs/version-0.2.0/getting_started/architecture.md",tags:[],version:"0.2.0",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Installation",permalink:"/jellyfish-docs/getting_started/installation"},next:{title:"Authentication",permalink:"/jellyfish-docs/getting_started/authentication"}},c={},m=[{value:"Server SDKs",id:"server-sdks",level:2},{value:"Client SDKs",id:"client-sdks",level:2},{value:"Diagram",id:"diagram",level:2}],u={toc:m},d="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,"Jellyfish ships with a couple of SDKs that make it easier to manage its state, as well as\npublish and consume tracks."),(0,a.kt)("p",null,"There are two types of SDKs: server side and client side."),(0,a.kt)("h2",{id:"server-sdks"},"Server SDKs"),(0,a.kt)("p",null,"Server SDKs allow you to manage Jellyfish state.\nIn particular, you can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"authenticate"),(0,a.kt)("li",{parentName:"ul"},"create/delete rooms"),(0,a.kt)("li",{parentName:"ul"},"add/remove peers"),(0,a.kt)("li",{parentName:"ul"},"add/remove components"),(0,a.kt)("li",{parentName:"ul"},"subscribe for notifications")),(0,a.kt)("p",null,"Under the hood, Server SDKs just use Jellyfish REST and WS API, see ",(0,a.kt)("a",{parentName:"p",href:"/jellyfish-docs/for_developers/api_reference"},"Jellyfish API"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"As an example, you can use server SDK to introduce a time limit on meeting duration and shut down the room after it passes.")),(0,a.kt)("h2",{id:"client-sdks"},"Client SDKs"),(0,a.kt)("p",null,"Client SDKs allow you to connect to Jellyfish to publish and consume tracks.\nIn particular, you can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"authenticate"),(0,a.kt)("li",{parentName:"ul"},"join specific room"),(0,a.kt)("li",{parentName:"ul"},"publish audio and video"),(0,a.kt)("li",{parentName:"ul"},"receive audio and video from other peers and components")),(0,a.kt)("p",null,"At the moment, Jellyfish supports only one type of client - WebRTC."),(0,a.kt)("h2",{id:"diagram"},"Diagram"),(0,a.kt)("p",null,"The whole concept is presented in the following diagram."),(0,a.kt)(o.Z,{alt:"Jellyfish architecture",sources:{light:(0,i.Z)("/img/architecture-light.png"),dark:(0,i.Z)("/img/architecture-dark.png")},mdxType:"ThemedImage"}),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Your Backend (BE)")," - serves your application frontend, and manages the database and\napplication-specific logic."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Jellyfish (JF)")," - Jellyfish media server.\nManages media."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Admin")," - someone who has special permission in your application - can create/delete\nrooms, add/remove peers, etc."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"User")," - someone who connects to Jellyfish to send and receive media."),(0,a.kt)("p",null,"Everything starts with ",(0,a.kt)("em",{parentName:"p"},"Admin")," who sends an HTTP request to ",(0,a.kt)("em",{parentName:"p"},"BE")," to create a new room.\n",(0,a.kt)("em",{parentName:"p"},"BE")," uses ",(0,a.kt)("em",{parentName:"p"},"jellyfish-server-sdk")," to communicate with ",(0,a.kt)("em",{parentName:"p"},"JF")," and create the room.\nUnder the hood, ",(0,a.kt)("em",{parentName:"p"},"jellyfish-server-sdk")," uses REST API exposed by ",(0,a.kt)("em",{parentName:"p"},"JF"),".\nAfter the room has been created, the ",(0,a.kt)("em",{parentName:"p"},"Admin")," invites a user by sending a new HTTP request to ",(0,a.kt)("em",{parentName:"p"},"BE"),".\nAgain, ",(0,a.kt)("em",{parentName:"p"},"BE")," uses ",(0,a.kt)("em",{parentName:"p"},"jellyfish-server-sdk")," to add the new peer to ",(0,a.kt)("em",{parentName:"p"},"JF"),"."),(0,a.kt)("p",null,"On the user side, they send a request to ",(0,a.kt)("em",{parentName:"p"},"BE")," to join the room.\n",(0,a.kt)("em",{parentName:"p"},"BE")," replies with ",(0,a.kt)("em",{parentName:"p"},"JF")," IP address it should connect to.\nThen, the ",(0,a.kt)("em",{parentName:"p"},"User")," uses ",(0,a.kt)("em",{parentName:"p"},"jellyfish-client-sdk")," to connect to ",(0,a.kt)("em",{parentName:"p"},"JF"),".\nAfter the connection has been established, the ",(0,a.kt)("em",{parentName:"p"},"User")," can send and receive media."))}h.isMDXComponent=!0}}]);