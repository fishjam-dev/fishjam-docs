"use strict";(self.webpackChunkjellyfish_docs=self.webpackChunkjellyfish_docs||[]).push([[7041],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="HLS",l={unversionedId:"getting_started/components/hls",id:"getting_started/components/hls",title:"HLS",description:"Creates HLS playlist that is ready to be broadcasted via CDN.",source:"@site/docs/getting_started/components/hls.md",sourceDirName:"getting_started/components",slug:"/getting_started/components/hls",permalink:"/jellyfish-docs/next/getting_started/components/hls",draft:!1,editUrl:"https://github.com/jellyfish-dev/jellyfish-docs/docs/getting_started/components/hls.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"WebRTC",permalink:"/jellyfish-docs/next/getting_started/peers/webrtc"},next:{title:"RTSP",permalink:"/jellyfish-docs/next/getting_started/components/rtsp"}},s={},p=[{value:"Compatibility",id:"compatibility",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Configuration options",id:"configuration-options",level:2},{value:"Env variables",id:"env-variables",level:2},{value:"Output",id:"output",level:2},{value:"Example Docker commands",id:"example-docker-commands",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hls"},"HLS"),(0,a.kt)("p",null,"Creates HLS playlist that is ready to be broadcasted via CDN.\nRead more about HLS ",(0,a.kt)("a",{parentName:"p",href:"https://developer.apple.com/streaming/"},"here"),"."),(0,a.kt)("h2",{id:"compatibility"},"Compatibility"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/jellyfish-docs/next/getting_started/peers/webrtc"},"WebRTC")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/jellyfish-docs/next/getting_started/components/rtsp"},"RTSP")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/jellyfish-docs/next/getting_started/components/file"},"File"))),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"../../introduction/basic_concepts#room"},"Room")," in which the HLS component is created must have the video codec set to H264.\nSee ",(0,a.kt)("a",{parentName:"li",href:"../../for_developers/api_reference/rest_api#tag/room/operation/create_room"},"API")," for more information."),(0,a.kt)("li",{parentName:"ul"},"Max 1 HLS component allowed per room.")),(0,a.kt)("h2",{id:"configuration-options"},"Configuration options"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lowLatency")," (boolean, default: false) - whether the component should use LL-HLS"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"persistent")," (boolean, default: false) - whether the stream should be saved or not.\nAfter a meeting that integrates an HLS component (with the persistent option set to true) ends, the meeting is preserved as a recording.\nTo manage this recording, use the ",(0,a.kt)("a",{parentName:"li",href:"../../for_developers/api_reference/rest_api#tag/recording"},"Recording API"),".\nThe recording is also available as ",(0,a.kt)("a",{parentName:"li",href:"../../for_developers/api_reference/rest_api#tag/recording/operation/getRecordingContent"},"HLS Video On Demand (VOD) API"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"targetWindowDuration")," (positive integer, default: null) - represents the duration, in seconds, of the live streaming content to be\nmaintained in a rolling window. If set to null (default), the entire stream will be available."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"subscribeMode"),' (string "manual" or "auto", default: "auto") - whether HLS component should automatically start consuming available tracks.\nWhen set to ',(0,a.kt)("inlineCode",{parentName:"li"},"manual"),", HLS component has to be explicitly told to subscribe for a specific peer/component tracks using\nthe ",(0,a.kt)("a",{parentName:"li",href:"../../for_developers/api_reference/rest_api#tag/hls/operation/subscribe_tracks"},"Subscription API"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3")," (object, default: null) - AWS S3 credentials. If credentials are set, the stream will be saved to the specified bucket.\nThis solution will automatically send your streams to an AWS bucket right after the end of your meeting.\nFor the exact credential structure see ",(0,a.kt)("a",{parentName:"li",href:"../../for_developers/api_reference/rest_api#tag/room/operation/add_component"},"Configuration API"),".")),(0,a.kt)("h2",{id:"env-variables"},"Env variables"),(0,a.kt)("p",null,"Currently, there are no environment variables related to this component."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"After adding a WebRTC peer (and at least one track) or an RTSP component, the HLS stream will be available\nunder ",(0,a.kt)("inlineCode",{parentName:"p"},"http://<jellyfish-address>/hls/<room_id>/index.m3u8")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"https://"),", if using TLS)."),(0,a.kt)("h2",{id:"example-docker-commands"},"Example Docker commands"),(0,a.kt)("p",null,"The HLS playlist will be created inside the Docker container. To access it from the host,\nyou need to create a volume, e.g. by adding the option ",(0,a.kt)("inlineCode",{parentName:"p"},"-v $(pwd)/jellyfish_output:/app/jellyfish_output"),"\nto your Docker command."),(0,a.kt)("p",null,"Other than that, your Docker commands shouldn't be affected by adding this component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8080:8080/tcp \\\n           -e JF_SERVER_API_TOKEN=token \\\n           -e JF_HOST=localhost:8080 \\\n           -v $(pwd)/jellyfish_output:/app/jellyfish_output \\\n           ghcr.io/jellyfish-dev/jellyfish:0.2.0\n")))}u.isMDXComponent=!0}}]);